// Generated from C.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002 \u00c3\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0003\u0002\u0003\u0002\u0003\u0002\u0003",
    "\u0002\u0007\u0002D\n\u0002\f\u0002\u000e\u0002G\u000b\u0002\u0003\u0002",
    "\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0006\u0003Q\n\u0003\r\u0003\u000e\u0003R\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003",
    "\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0003",
    "\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0005\tx\n\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0005",
    "\n\u0080\n\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r",
    "\u0003\r\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0011\u0003\u0011",
    "\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0014",
    "\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0003\u0017",
    "\u0003\u0017\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019\u0003\u001a",
    "\u0003\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001c",
    "\u0003\u001c\u0003\u001d\u0006\u001d\u00ae\n\u001d\r\u001d\u000e\u001d",
    "\u00af\u0003\u001e\u0006\u001e\u00b3\n\u001e\r\u001e\u000e\u001e\u00b4",
    "\u0003\u001e\u0007\u001e\u00b8\n\u001e\f\u001e\u000e\u001e\u00bb\u000b",
    "\u001e\u0003\u001f\u0006\u001f\u00be\n\u001f\r\u001f\u000e\u001f\u00bf",
    "\u0003\u001f\u0003\u001f\u0004ER\u0002 \u0003\u0003\u0005\u0004\u0007",
    "\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017",
    "\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014",
    "\'\u0015)\u0016+\u0017-\u0018/\u00191\u001a3\u001b5\u001c7\u001d9\u001e",
    ";\u001f= \u0003\u0002\u0007\u0003\u0002\f\f\u0003\u00022;\u0004\u0002",
    "C\\c|\u0005\u00022;C\\c|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0002\u00ca",
    "\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002",
    "\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002",
    "\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002",
    "\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002",
    "\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002",
    "\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002",
    "\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002",
    "\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002",
    "\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002",
    "\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003",
    "\u0002\u0002\u0002\u0002-\u0003\u0002\u0002\u0002\u0002/\u0003\u0002",
    "\u0002\u0002\u00021\u0003\u0002\u0002\u0002\u00023\u0003\u0002\u0002",
    "\u0002\u00025\u0003\u0002\u0002\u0002\u00027\u0003\u0002\u0002\u0002",
    "\u00029\u0003\u0002\u0002\u0002\u0002;\u0003\u0002\u0002\u0002\u0002",
    "=\u0003\u0002\u0002\u0002\u0003?\u0003\u0002\u0002\u0002\u0005L\u0003",
    "\u0002\u0002\u0002\u0007Y\u0003\u0002\u0002\u0002\t^\u0003\u0002\u0002",
    "\u0002\u000bc\u0003\u0002\u0002\u0002\rj\u0003\u0002\u0002\u0002\u000f",
    "m\u0003\u0002\u0002\u0002\u0011w\u0003\u0002\u0002\u0002\u0013\u007f",
    "\u0003\u0002\u0002\u0002\u0015\u0081\u0003\u0002\u0002\u0002\u0017\u0083",
    "\u0003\u0002\u0002\u0002\u0019\u0085\u0003\u0002\u0002\u0002\u001b\u0088",
    "\u0003\u0002\u0002\u0002\u001d\u008b\u0003\u0002\u0002\u0002\u001f\u008e",
    "\u0003\u0002\u0002\u0002!\u0091\u0003\u0002\u0002\u0002#\u0094\u0003",
    "\u0002\u0002\u0002%\u0096\u0003\u0002\u0002\u0002\'\u0098\u0003\u0002",
    "\u0002\u0002)\u009a\u0003\u0002\u0002\u0002+\u009c\u0003\u0002\u0002",
    "\u0002-\u009e\u0003\u0002\u0002\u0002/\u00a0\u0003\u0002\u0002\u0002",
    "1\u00a2\u0003\u0002\u0002\u00023\u00a4\u0003\u0002\u0002\u00025\u00a6",
    "\u0003\u0002\u0002\u00027\u00aa\u0003\u0002\u0002\u00029\u00ad\u0003",
    "\u0002\u0002\u0002;\u00b2\u0003\u0002\u0002\u0002=\u00bd\u0003\u0002",
    "\u0002\u0002?@\u00071\u0002\u0002@A\u00071\u0002\u0002AE\u0003\u0002",
    "\u0002\u0002BD\u000b\u0002\u0002\u0002CB\u0003\u0002\u0002\u0002DG\u0003",
    "\u0002\u0002\u0002EF\u0003\u0002\u0002\u0002EC\u0003\u0002\u0002\u0002",
    "FH\u0003\u0002\u0002\u0002GE\u0003\u0002\u0002\u0002HI\t\u0002\u0002",
    "\u0002IJ\u0003\u0002\u0002\u0002JK\b\u0002\u0002\u0002K\u0004\u0003",
    "\u0002\u0002\u0002LM\u00071\u0002\u0002MN\u0007,\u0002\u0002NP\u0003",
    "\u0002\u0002\u0002OQ\u000b\u0002\u0002\u0002PO\u0003\u0002\u0002\u0002",
    "QR\u0003\u0002\u0002\u0002RS\u0003\u0002\u0002\u0002RP\u0003\u0002\u0002",
    "\u0002ST\u0003\u0002\u0002\u0002TU\u0007,\u0002\u0002UV\u00071\u0002",
    "\u0002VW\u0003\u0002\u0002\u0002WX\b\u0003\u0002\u0002X\u0006\u0003",
    "\u0002\u0002\u0002YZ\u0007x\u0002\u0002Z[\u0007q\u0002\u0002[\\\u0007",
    "k\u0002\u0002\\]\u0007f\u0002\u0002]\b\u0003\u0002\u0002\u0002^_\u0007",
    "o\u0002\u0002_`\u0007c\u0002\u0002`a\u0007k\u0002\u0002ab\u0007p\u0002",
    "\u0002b\n\u0003\u0002\u0002\u0002cd\u0007r\u0002\u0002de\u0007t\u0002",
    "\u0002ef\u0007k\u0002\u0002fg\u0007p\u0002\u0002gh\u0007v\u0002\u0002",
    "hi\u0007h\u0002\u0002i\f\u0003\u0002\u0002\u0002jk\u0007k\u0002\u0002",
    "kl\u0007h\u0002\u0002l\u000e\u0003\u0002\u0002\u0002mn\u0007g\u0002",
    "\u0002no\u0007n\u0002\u0002op\u0007u\u0002\u0002pq\u0007g\u0002\u0002",
    "q\u0010\u0003\u0002\u0002\u0002rs\u0007v\u0002\u0002st\u0007t\u0002",
    "\u0002tu\u0007w\u0002\u0002ux\u0007g\u0002\u0002vx\u00073\u0002\u0002",
    "wr\u0003\u0002\u0002\u0002wv\u0003\u0002\u0002\u0002x\u0012\u0003\u0002",
    "\u0002\u0002yz\u0007h\u0002\u0002z{\u0007c\u0002\u0002{|\u0007n\u0002",
    "\u0002|}\u0007u\u0002\u0002}\u0080\u0007g\u0002\u0002~\u0080\u00072",
    "\u0002\u0002\u007fy\u0003\u0002\u0002\u0002\u007f~\u0003\u0002\u0002",
    "\u0002\u0080\u0014\u0003\u0002\u0002\u0002\u0081\u0082\u0007@\u0002",
    "\u0002\u0082\u0016\u0003\u0002\u0002\u0002\u0083\u0084\u0007>\u0002",
    "\u0002\u0084\u0018\u0003\u0002\u0002\u0002\u0085\u0086\u0007?\u0002",
    "\u0002\u0086\u0087\u0007?\u0002\u0002\u0087\u001a\u0003\u0002\u0002",
    "\u0002\u0088\u0089\u0007@\u0002\u0002\u0089\u008a\u0007?\u0002\u0002",
    "\u008a\u001c\u0003\u0002\u0002\u0002\u008b\u008c\u0007>\u0002\u0002",
    "\u008c\u008d\u0007?\u0002\u0002\u008d\u001e\u0003\u0002\u0002\u0002",
    "\u008e\u008f\u0007(\u0002\u0002\u008f\u0090\u0007(\u0002\u0002\u0090",
    " \u0003\u0002\u0002\u0002\u0091\u0092\u0007~\u0002\u0002\u0092\u0093",
    "\u0007~\u0002\u0002\u0093\"\u0003\u0002\u0002\u0002\u0094\u0095\u0007",
    "*\u0002\u0002\u0095$\u0003\u0002\u0002\u0002\u0096\u0097\u0007+\u0002",
    "\u0002\u0097&\u0003\u0002\u0002\u0002\u0098\u0099\u0007}\u0002\u0002",
    "\u0099(\u0003\u0002\u0002\u0002\u009a\u009b\u0007\u007f\u0002\u0002",
    "\u009b*\u0003\u0002\u0002\u0002\u009c\u009d\u0007=\u0002\u0002\u009d",
    ",\u0003\u0002\u0002\u0002\u009e\u009f\u0007,\u0002\u0002\u009f.\u0003",
    "\u0002\u0002\u0002\u00a0\u00a1\u00071\u0002\u0002\u00a10\u0003\u0002",
    "\u0002\u0002\u00a2\u00a3\u0007-\u0002\u0002\u00a32\u0003\u0002\u0002",
    "\u0002\u00a4\u00a5\u0007/\u0002\u0002\u00a54\u0003\u0002\u0002\u0002",
    "\u00a6\u00a7\u0007k\u0002\u0002\u00a7\u00a8\u0007p\u0002\u0002\u00a8",
    "\u00a9\u0007v\u0002\u0002\u00a96\u0003\u0002\u0002\u0002\u00aa\u00ab",
    "\u0007?\u0002\u0002\u00ab8\u0003\u0002\u0002\u0002\u00ac\u00ae\t\u0003",
    "\u0002\u0002\u00ad\u00ac\u0003\u0002\u0002\u0002\u00ae\u00af\u0003\u0002",
    "\u0002\u0002\u00af\u00ad\u0003\u0002\u0002\u0002\u00af\u00b0\u0003\u0002",
    "\u0002\u0002\u00b0:\u0003\u0002\u0002\u0002\u00b1\u00b3\t\u0004\u0002",
    "\u0002\u00b2\u00b1\u0003\u0002\u0002\u0002\u00b3\u00b4\u0003\u0002\u0002",
    "\u0002\u00b4\u00b2\u0003\u0002\u0002\u0002\u00b4\u00b5\u0003\u0002\u0002",
    "\u0002\u00b5\u00b9\u0003\u0002\u0002\u0002\u00b6\u00b8\t\u0005\u0002",
    "\u0002\u00b7\u00b6\u0003\u0002\u0002\u0002\u00b8\u00bb\u0003\u0002\u0002",
    "\u0002\u00b9\u00b7\u0003\u0002\u0002\u0002\u00b9\u00ba\u0003\u0002\u0002",
    "\u0002\u00ba<\u0003\u0002\u0002\u0002\u00bb\u00b9\u0003\u0002\u0002",
    "\u0002\u00bc\u00be\t\u0006\u0002\u0002\u00bd\u00bc\u0003\u0002\u0002",
    "\u0002\u00be\u00bf\u0003\u0002\u0002\u0002\u00bf\u00bd\u0003\u0002\u0002",
    "\u0002\u00bf\u00c0\u0003\u0002\u0002\u0002\u00c0\u00c1\u0003\u0002\u0002",
    "\u0002\u00c1\u00c2\b\u001f\u0002\u0002\u00c2>\u0003\u0002\u0002\u0002",
    "\u000b\u0002ERw\u007f\u00af\u00b4\u00b9\u00bf\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class CLexer extends antlr4.Lexer {

    static grammarFileName = "C.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, "'void'", "'main'", "'printf'", 
                         "'if'", "'else'", null, null, "'>'", "'<'", "'=='", 
                         "'>='", "'<='", "'&&'", "'||'", "'('", "')'", "'{'", 
                         "'}'", "';'", "'*'", "'/'", "'+'", "'-'", "'int'", 
                         "'='" ];
	static symbolicNames = [ null, "SCOMMENT", "MCOMMENT", "VOID", "MAIN", 
                          "PRINT", "IF", "ELSE", "TRUE", "FALSE", "GREATHER", 
                          "LESSER", "EQUALS", "GREATEQUAL", "LESSEQUAL", 
                          "AND", "OR", "LP", "RP", "LCB", "RCB", "SEMI", 
                          "MUL", "DIV", "ADD", "SUB", "TYPE", "ASSIGN", 
                          "VALUE", "ID", "BLANKS" ];
	static ruleNames = [ "SCOMMENT", "MCOMMENT", "VOID", "MAIN", "PRINT", "IF", 
                      "ELSE", "TRUE", "FALSE", "GREATHER", "LESSER", "EQUALS", 
                      "GREATEQUAL", "LESSEQUAL", "AND", "OR", "LP", "RP", 
                      "LCB", "RCB", "SEMI", "MUL", "DIV", "ADD", "SUB", 
                      "TYPE", "ASSIGN", "VALUE", "ID", "BLANKS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

CLexer.EOF = antlr4.Token.EOF;
CLexer.SCOMMENT = 1;
CLexer.MCOMMENT = 2;
CLexer.VOID = 3;
CLexer.MAIN = 4;
CLexer.PRINT = 5;
CLexer.IF = 6;
CLexer.ELSE = 7;
CLexer.TRUE = 8;
CLexer.FALSE = 9;
CLexer.GREATHER = 10;
CLexer.LESSER = 11;
CLexer.EQUALS = 12;
CLexer.GREATEQUAL = 13;
CLexer.LESSEQUAL = 14;
CLexer.AND = 15;
CLexer.OR = 16;
CLexer.LP = 17;
CLexer.RP = 18;
CLexer.LCB = 19;
CLexer.RCB = 20;
CLexer.SEMI = 21;
CLexer.MUL = 22;
CLexer.DIV = 23;
CLexer.ADD = 24;
CLexer.SUB = 25;
CLexer.TYPE = 26;
CLexer.ASSIGN = 27;
CLexer.VALUE = 28;
CLexer.ID = 29;
CLexer.BLANKS = 30;



